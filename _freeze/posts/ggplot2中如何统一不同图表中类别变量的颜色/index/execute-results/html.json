{
  "hash": "f810a8247dc864cfa3e63cf06ad592e0",
  "result": {
    "markdown": "---\ntitle: 'ggplot2 中如何统一不同图表中类别变量的颜色'\ndate: '2019/05/12'\ncategories: [R, ggplot2]\nexecute: \n  warning: false\n---\n\n\n在用 ggplot2 绘图的时候，经常会遇到一个问题：**同样的类别在不同的图表里渲染出来的颜色不一样**。\n\n比如要画两张图，图一比较的是中日韩三国的 GDP 增长率，图二比较的是中美日三国的 GDP 增长率，但是默认的配色方案下，中国在图一中可能用红色表示，到图二又变成了蓝色表示。\n\n颜色是重要的视觉编码，为了不让人产生误解，同样的类别自然需要统一颜色。这里记录一下这类问题解决的方法和思路。\n\n首先载入本文将要用到的包。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(nycflights13)\nlibrary(scales)\nlibrary(ggridges)\n```\n:::\n\n\n本文将使用 Hadley Wickham 贡献的 [nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html) 数据集，该数据集包含了纽约市三大机场的 33 多万条航班飞行数据。\n\n来看看 `nycflights13::flights` 数据集的具体信息：`flights` 中的每行数据都表示一次航班的飞行情况，变量包括航班的起飞降落时间、起始地、目的地、航班号、延迟时间等等。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(flights))\n```\n\n::: {.cell-output-display}\n| year| month| day| dep_time| sched_dep_time| dep_delay| arr_time| sched_arr_time| arr_delay|carrier | flight|tailnum |origin |dest | air_time| distance| hour| minute|time_hour           |\n|----:|-----:|---:|--------:|--------------:|---------:|--------:|--------------:|---------:|:-------|------:|:-------|:------|:----|--------:|--------:|----:|------:|:-------------------|\n| 2013|     1|   1|      517|            515|         2|      830|            819|        11|UA      |   1545|N14228  |EWR    |IAH  |      227|     1400|    5|     15|2013-01-01 05:00:00 |\n| 2013|     1|   1|      533|            529|         4|      850|            830|        20|UA      |   1714|N24211  |LGA    |IAH  |      227|     1416|    5|     29|2013-01-01 05:00:00 |\n| 2013|     1|   1|      542|            540|         2|      923|            850|        33|AA      |   1141|N619AA  |JFK    |MIA  |      160|     1089|    5|     40|2013-01-01 05:00:00 |\n| 2013|     1|   1|      544|            545|        -1|     1004|           1022|       -18|B6      |    725|N804JB  |JFK    |BQN  |      183|     1576|    5|     45|2013-01-01 05:00:00 |\n| 2013|     1|   1|      554|            600|        -6|      812|            837|       -25|DL      |    461|N668DN  |LGA    |ATL  |      116|      762|    6|      0|2013-01-01 06:00:00 |\n| 2013|     1|   1|      554|            558|        -4|      740|            728|        12|UA      |   1696|N39463  |EWR    |ORD  |      150|      719|    5|     58|2013-01-01 05:00:00 |\n:::\n:::\n\n\n现在的任务是：**分别找到三大机场执飞数量排名前五的航空公司，并用柱状图表示出来。**\n\n数据集中我们将使用到的是变量是  `carrier` 和 `origin`。`carrier` 表示当次航班所属航空公司的代码，`origin` 表示航班起飞的机场。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 查看航空公司\nknitr::kable(flights %>% count(carrier, sort = TRUE))\n```\n\n::: {.cell-output-display}\n|carrier |     n|\n|:-------|-----:|\n|UA      | 58665|\n|B6      | 54635|\n|EV      | 54173|\n|DL      | 48110|\n|AA      | 32729|\n|MQ      | 26397|\n|US      | 20536|\n|9E      | 18460|\n|WN      | 12275|\n|VX      |  5162|\n|FL      |  3260|\n|AS      |   714|\n|F9      |   685|\n|YV      |   601|\n|HA      |   342|\n|OO      |    32|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 查看航班起飞机场\nknitr::kable(flights %>% count(origin, sort = TRUE))\n```\n\n::: {.cell-output-display}\n|origin |      n|\n|:------|------:|\n|EWR    | 120835|\n|JFK    | 111279|\n|LGA    | 104662|\n:::\n:::\n\n\n由于航空公司过多，我们筛选出执飞数量最多的十家航空公司进行分析。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 得到执飞次数最多的十家公司\ntop10Carrier <- flights %>% \n  count(carrier, sort = TRUE) %>%\n  top_n(10, n)\n\n# 用semi_join()过滤出这十家航空公司的数据\nflights_sample <- flights %>% \n  semi_join(top10Carrier, by = \"carrier\") %>%\n  # 将carrier从字符串变成因子，方便后续分析\n  mutate(carrier = as.factor(carrier))\n```\n:::\n\n\n下面得到 JFK 机场执飞数排名前5的航空公司，并且用柱状图表示。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nJFK_flights <- flights_sample %>%\n  filter(origin == \"JFK\") %>%\n  count(carrier, sort = TRUE) %>%\n  top_n(5, n)\n\nJFK_flights %>% \n  ggplot(aes(x = carrier, y = n)) +\n  geom_bar(aes(fill = carrier), stat = \"identity\") +\n  guides(fill = FALSE) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![JFK flight](index_files/figure-html/fig-jfk1-1.png){#fig-jfk1 width=672}\n:::\n:::\n\n\n接着们采用同样的方法得到 LGA 机场执飞数排名前五的航空公司，并且用柱状图表示：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLGA_flights <- flights_sample %>%\n  filter(origin == \"LGA\") %>%\n  count(carrier, sort = TRUE) %>%\n  top_n(5, n)\n\nLGA_flights %>% \n  ggplot(aes(x = carrier, y = n)) +\n  geom_bar(aes(fill = carrier), stat = \"identity\") +\n  guides(fill = FALSE) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![LGA flight](index_files/figure-html/fig-lga1-1.png){#fig-lga1 width=672}\n:::\n:::\n\n\n从上面两张图中我们可以看到，同一家航空公司在两张图中的颜色并不一样，例如 MQ 公司在 @fig-jfk1 中是水粉色，在 @fig-lga1 中则变成了蓝色。\n\n为什么会这样？这就要回到 ggplot2 的绘图过程。简单来说，如果要给类别（factor）变量分配颜色，ggplot2 绘图系统首先会根据类别的数量（即 factor 中 levels 的数量）生成一组颜色向量。如果因子的 levels 数量是 5，就自动生成五种颜色；如果因子的 levels 数量是 8，就自动生成 8 种颜色。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用scale::hue_pal()(n)可以生成一组系统的默认颜色向量\nhue_pal()(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"#F8766D\" \"#A3A500\" \"#00BF7D\" \"#00B0F6\" \"#E76BF3\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用scale::show_col()函数能够将颜色以视觉化的方式呈现\nshow_col(hue_pal()(5), borders = NA)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n不管是因子的 levels，还是颜色向量，它们都有先后顺序。两者的顺序一一对应起来，就是不同 levels 的配色方案。\n\n下面用一张表格来表示这种对应关系。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 得到 JFK_flights factor 的 levels\nJFK_flights_levels <- levels(JFK_flights$carrier %>% droplevels())\nJFK_flights_levels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"9E\" \"AA\" \"B6\" \"DL\" \"MQ\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 得到 LGA_flights factor 的 levels\nLGA_flights_levels <- levels(LGA_flights$carrier %>% droplevels())\nLGA_flights_levels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"AA\" \"DL\" \"EV\" \"MQ\" \"US\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggplot2 自动生成的五种颜色\nhue_colors <- hue_pal()(5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 使用表格看到两者意义对应的关系\ntibble(hue_colors = hue_colors,\n       figure1 = JFK_flights_levels,\n       figure2 = LGA_flights_levels) %>% \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|hue_colors |figure1 |figure2 |\n|:----------|:-------|:-------|\n|#F8766D    |9E      |AA      |\n|#A3A500    |AA      |DL      |\n|#00BF7D    |B6      |EV      |\n|#00B0F6    |DL      |MQ      |\n|#E76BF3    |MQ      |US      |\n:::\n:::\n\n\n从表中可以看到，MQ 在 @fig-jfk1 中 levels 排序为第五，因此对应的颜色是`#E76BF3`，也就是水粉色；而在 @fig-lga1 中，MQ 的 levels 排序为第四，因此对应的颜色为`#00B0F6`，也就是蓝色。\n\n如果我们继续对柱状图按照从大到小的排序，则 carrier 的 levels 顺序又会被进一步改变。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLGA_flights %>% \n  mutate(carrier = fct_reorder(carrier, -n)) %>%\n  pull(carrier) %>%\n  droplevels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] DL MQ AA US EV\nLevels: DL MQ AA US EV\n```\n:::\n:::\n\n\n航空公司 MQ 这会儿在 levels 中的排序变成了第二，而颜色就对应变成了 `#A3A500`，也就是军绿色（@fig-lga2）。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLGA_flights %>% \n  mutate(carrier = fct_reorder(carrier, -n)) %>%\n  ggplot(aes(x = carrier, y = n)) +\n  geom_bar(aes(fill = carrier), stat = \"identity\") +\n  guides(fill = FALSE) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![LGA flight](index_files/figure-html/fig-lga2-1.png){#fig-lga2 width=672}\n:::\n:::\n\n\n应该如何解决这个问题，使得不同图表中的颜色映射变得统一起来？\n\n解决方法就是给这十家航空公司手动设定颜色，事前就将因子的 level 和颜色向量 color 一一对应。这样，不管后续因子的 level 顺序如何变化，level 所代表的颜色都不会根据其顺序而变化。\n\n简单来说共分为四个步骤：\n\n- 首先确立目标：要给一个因子 carrier 统一配色，该变量有 n 个类别（即 n 个 levels）\n\n- 用`hue_pal()`、`brewer_pal()`等方法生成一组颜色向量，向量的长度是因子 levels 的数量 n\n\n- 用 `names()` 给这组颜色变量命名，名字就是 levels\n\n- 用 ggplot2 绘图时使用 `scale_color_manual()`方法手动配色，values 即为上述有名字的颜色向量\n\n若用在本例中具体操作如下：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 从调色板中自动生成 nlevels 个颜色，命名为 carrier_colors\n# nlevel() 返回因子的 levels 数量\ncarrier_colors <- hue_pal()(nlevels(flights_sample$carrier))\ncarrier_colors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"#F8766D\" \"#D89000\" \"#A3A500\" \"#39B600\" \"#00BF7D\" \"#00BFC4\" \"#00B0F6\"\n [8] \"#9590FF\" \"#E76BF3\" \"#FF62BC\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 将 carrier_colors 视觉化\nshow_col(carrier_colors, borders = NA)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 用 names() 给 carrier_colors 加上名字，名字就是因子的 levels\nnames(carrier_colors) <- levels(flights_sample$carrier)\ncarrier_colors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       9E        AA        B6        DL        EV        MQ        UA        US \n\"#F8766D\" \"#D89000\" \"#A3A500\" \"#39B600\" \"#00BF7D\" \"#00BFC4\" \"#00B0F6\" \"#9590FF\" \n       VX        WN \n\"#E76BF3\" \"#FF62BC\" \n```\n:::\n:::\n\n\n接下来，可以使用 `scale_fill_manual()` 手动赋予颜色\n\n\n::: {.cell}\n\n```{.r .cell-code}\nJFK_flights %>% \n  ggplot(aes(x = carrier, y = n)) +\n  geom_bar(aes(fill = carrier), stat = \"identity\") +\n  scale_fill_manual(values = carrier_colors) +\n  guides(fill = FALSE) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![JFK flight](index_files/figure-html/fig-jfk2-1.png){#fig-jfk2 width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nLGA_flights %>% \n  ggplot(aes(x = carrier, y = n)) +\n  geom_bar(aes(fill = carrier), stat = \"identity\") +\n  scale_fill_manual(values = carrier_colors) +\n  guides(fill = FALSE) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![LGA flight](index_files/figure-html/fig-lga3-1.png){#fig-lga3 width=672}\n:::\n:::\n\n\n从图 @fig-jfk2 和图 @fig-lga3 中可以看到，在设置了`scale_fill_manual`后，两张图中共同类别的颜色统一了，MQ 公司在两张图中都为蓝色。\n\n即使后续我们还需绘制其它图像，使用这个方法同样能够统一不同类别的颜色。\n\n举个例子，比较一下不同航空公司的飞行里程，观察哪些航空公司主营短程航班，哪些航空公司主营长途航班。\n\n我们用脊线图来表示不同航空公司的飞行里程。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_sample %>%\n  mutate(carrier = fct_reorder(carrier, -distance, median)) %>%\n  ggplot(aes(x = distance, y = carrier)) + \n  geom_density_ridges(aes(fill = carrier), alpha = 0.7) +\n  scale_fill_manual(values = carrier_colors) +\n  guides(fill = FALSE) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n图中结果显示，前四家航空的航班主要是短程飞行，中间五家航空公司短中长途飞行皆有，VX 公司则主营长途飞行，飞行里程多在 2000 到 3000 之间。\n\n关键在于，我们使用 `scale_fill_manual` 实现了和前图一致的配色方案。MQ 公司在本图中仍然是蓝色，其它颜色亦同。\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}