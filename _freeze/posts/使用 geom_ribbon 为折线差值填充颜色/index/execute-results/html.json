{
  "hash": "d526c293d4ba2084ada9347a991e35b8",
  "result": {
    "markdown": "---\ntitle: \"使用 geom_ribbon 给双折线区间填充颜色\"\nauthor: \"Boyce\"\ndate: \"2023/08/04\"\ncategories: [R, ggplot2]\nexecute:\n  warning: false\n---\n\n\n## 背景介绍\n\n平常看数据图表时，经常见到这么一种图表类型------一张图里有两条折线 A 和 B，当 A 大于 B 时，AB 空间里填充一种颜色；当 B 大于 A 时，AB 空间里填充另一种颜色。\n\n例如《华盛顿邮报》制作的这张图：\n\n![](Hot%20Dogs%20Can%20Explain%20How%20Our%20View%20of%20Inflation%20and%20Employment%20Cha.png){width=\"80%\"}\n\n探索了一下，发现可以借助 `geom_ribbon` 函数实现类似功能。\n\n## 包引入\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(patchwork)\n```\n:::\n\n\n## 数据准备和清洗\n\n先导入数据。\n\n\n::: {.cell}\n\n```{.r .cell-code}\napps_mau <- readxl::read_xlsx(\"QM数据.xlsx\", sheet = 1)\n```\n:::\n\n\n`apps_mau` 数据集里面有快手、百度等移动应用的财报月活数据和 QM 监测到的月活数据。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(apps_mau))\n```\n\n::: {.cell-output-display}\n|时间   | 财报数据| QM数据|应用名              |\n|:------|--------:|------:|:-------------------|\n|2020Q1 |     4.95|   5.15|快手（主站+极速版） |\n|2020Q2 |     4.74|   4.97|快手（主站+极速版） |\n|2020Q3 |     4.79|   5.05|快手（主站+极速版） |\n|2020Q4 |     4.76|   5.22|快手（主站+极速版） |\n|2021Q1 |     5.20|   5.71|快手（主站+极速版） |\n|2021Q2 |     5.06|   5.26|快手（主站+极速版） |\n:::\n:::\n\n\n现在要做的是：当 QM 监测数据高于该应用的财报数据时，采用一种颜色填充；当 QM 监测数据低于财报数据时，采用另外一种颜色填充。\n\n对数据进行简单地清洗。\n\n\n::: {.cell}\n\n```{.r .cell-code}\napps_mau_clean <- apps_mau %>%\n  # 把数据类型从字符串转换成时间，geom_ribbon 的参数需要是数值型变量\n  mutate(时间 = zoo::as.yearqtr(时间)) %>%\n  # 因子排序，后续做分面图时按照月活差距排序\n  mutate(应用名 = fct_reorder(应用名, 财报数据 - QM数据, mean))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(apps_mau_clean))\n```\n\n::: {.cell-output-display}\n|时间    | 财报数据| QM数据|应用名              |\n|:-------|--------:|------:|:-------------------|\n|2020 Q1 |     4.95|   5.15|快手（主站+极速版） |\n|2020 Q2 |     4.74|   4.97|快手（主站+极速版） |\n|2020 Q3 |     4.79|   5.05|快手（主站+极速版） |\n|2020 Q4 |     4.76|   5.22|快手（主站+极速版） |\n|2021 Q1 |     5.20|   5.71|快手（主站+极速版） |\n|2021 Q2 |     5.06|   5.26|快手（主站+极速版） |\n:::\n:::\n\n\n后续作图时， 由于 `geom_ribbon` 使用宽数据，`geom_line` 使用长数据，因此此处需做一个数据类型的转换。\n\n\n::: {.cell}\n\n```{.r .cell-code}\napps_mau_longdata <- apps_mau_clean %>%\n  # 看QM数据相较于财报数据偏离比例有多少\n  mutate(diff = (QM数据 - 财报数据) / 财报数据,\n         diff_format = str_c(round(diff,2) * 100, \"%\")) %>%\n  pivot_longer(cols = c('财报数据', 'QM数据'),\n               names_to = '数据来源',\n               values_to = '月活') \n```\n:::\n\n\n再来看看转换后的数据。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(apps_mau_longdata))\n```\n\n::: {.cell-output-display}\n|时间    |应用名              |      diff|diff_format |数据来源 | 月活|\n|:-------|:-------------------|---------:|:-----------|:--------|----:|\n|2020 Q1 |快手（主站+极速版） | 0.0404040|4%          |财报数据 | 4.95|\n|2020 Q1 |快手（主站+极速版） | 0.0404040|4%          |QM数据   | 5.15|\n|2020 Q2 |快手（主站+极速版） | 0.0485232|5%          |财报数据 | 4.74|\n|2020 Q2 |快手（主站+极速版） | 0.0485232|5%          |QM数据   | 4.97|\n|2020 Q3 |快手（主站+极速版） | 0.0542797|5%          |财报数据 | 4.79|\n|2020 Q3 |快手（主站+极速版） | 0.0542797|5%          |QM数据   | 5.05|\n:::\n:::\n\n\n## 绘图\n\n绘图时会用到三个 `geom` 图形函数：`geom_line` 用来绘制折线，`geom_text` 用来绘制QM数据相较于财报数据的偏离值，而`geom_ribbon` 用于给折线差值空间填充颜色。\n\n其中 `geom_ribbon` 的主要 `aes()` 参数是 `x`、`y`、`xmin`、`ymin`、`xmax`、`ymax`，表示绘图空间的起始及结束坐标。另外，`fill` 表示填充的颜色，`alpha` 表示透明度。\n\n\n::: {.cell}\n\n```{.r .cell-code}\napps_plot <- apps_mau_longdata %>%\n  # x = 时间的数据类型需是泛 date 类型,否则无效\n  ggplot(aes(x = 时间)) +\n  # 分组折线图\n  geom_line(aes(y = 月活, group = 数据来源, color = 数据来源)) +\n  # 标注出偏离比例\n  geom_text(data = apps_mau_longdata %>% filter(数据来源 == 'QM数据'),\n            aes(y = 月活, label = diff_format)) +\n  # 折线差值部分填充颜色\n  geom_ribbon(\n    data = apps_mau_clean %>% mutate(颜色 = ifelse(财报数据>QM数据, '财报数据', 'QM数据')),\n    mapping = aes(\n      # pmin 和 pmax 函数表示在一组向量中分别取最小和最大值\n      ymin = pmin(财报数据, QM数据),\n      ymax = pmax(财报数据, QM数据),\n      fill = 颜色),\n    alpha = 0.3\n  ) +\n  facet_wrap(~ 应用名, ncol = 2) +\n  scale_x_continuous(\n    # 横轴标签只出现7个\n    breaks = scales::pretty_breaks(n = 7),\n    # 横纵标签默认为'2020-01 的格式，将其格式化为 2020Q1'\n    labels = function(x) format(zoo::as.yearqtr(x), \"%YQ%q\")) +\n  guides(fill = 'none') +\n  theme_ipsum(base_family = 'PingFang SC', grid = 'XY')\n```\n:::\n\n\n![](apps_mau_plot.png)\n\n需要注意的是，使用 `goem_ribbon` 有一个缺点：当两条折线交叉的时候，交叉点附近区域无法被正确填色（仔细看的话会发现，快手分面图中两线交汇的地方是空白的）。\n\n这是由于`geom_ribbon`的工作原理所导致的：`geom_ribbon` 会以 y 轴的值作为区域的边界，所以当两条线交叉时，那一点的 y 值是不确定的，所以 ggplot2 不会在那个位置上色。\n\n针对这点，暂时没有发现特别好的解决方法。只能等生成 svg 图形后，在 Figma 里手动调整。\n\n## 注意事项\n\n1、数据结构方面。`goem_line` 使用的是长数据，而 `goem_ribbon` 使用的是宽数据。将它们同时绘制在一张图里的时候，需要做数据转换，不能使用同一个数据集。\n\n2、数据类型方面。使用 `geom_ribbon` 绘图时，x轴和y轴都必须是数值型变量或者时间变量，数据类型不对的话虽不会报错，但也无法绘制出任何结果。这里 debug 了好久才发现问题，最后使用 zoo pacakge 的 `as.yearqtr` 函数将时间（2020Q1）由字符串格式转换成时间格式。\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}