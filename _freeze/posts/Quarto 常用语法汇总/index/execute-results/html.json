{
  "hash": "377bde9cf95eca1efb20c898a235d9ae",
  "result": {
    "markdown": "---\ntitle: \"Quarto 常用语法汇总\"\nauthor: \"Boyce\"\ndate: \"2023/08/12\"\ncategories: [Quarto, 清单]\nengine: knitr\n---\n\n\n年纪大了记忆力不好，记录一下常用语法，避免每次都要重新翻阅和查询Quarto的文档。\n\n## 单篇博文配置\n\n每篇博文开头需要配置的参数。\n\n\n::: {.cell}\n\n```{.default .cell-code}\n---\ntitle: \"Quarto 常用语法汇总\"\nauthor: \"Boyce\"\ndate: \"2023/08/12\"\ncategories: [Quarto, 清单]\n---\n```\n:::\n\n\nQuarto支持使用Knitr和Jupyter两类引擎，它会根据当面的`.qmd`文件内容自动选择引擎来渲染网页文件，我们也可以在开头通过全局命令指定，例如：\n\n\n::: {.cell}\n\n```{.default .cell-code}\n---\nengine: knitr\n---\n```\n:::\n\n\n如果需要代码块执行某些操作或者不执行某些操作，同样可以在开头使用`execute`进行全局设置。例如，`eval: false`表示只展示代码而不执行代码，也不会返回任何结果。\n\n\n::: {.cell}\n\n```{.default .cell-code}\n---\nexecute: \n  eval: false\n---\n```\n:::\n\n\n如果在单个代码块的开头修改`execute`，可以覆盖开头的全局配置。例如在代码第一行写入`#| eval: true`，表示在该代码块上执行代码。\n\n其他常用配置还包括：\n\n- `warning: false`表示执行代码但不返回警告。\n\n- `echo: false` 表示只展示输出结果，但不展示源代码。\n\n- `error: true` 表示在执行过程遇到报错也不会停止文档处理。\n\n关于`execute`的配置，详见[文档](https://quarto.org/docs/reference/cells/cells-knitr.html#code-output)。\n\n## 代码块\n\n如果只需要展示代码块的样式，而不需要在其中高亮任何元素，可以直接使用`{default}`。\n\n如果觉得单行代码太长，想要在代码块中直接换行，可以在开头写入`#| code-overflow: wrap`。\n\n## 表格\n\n想在文章中展示表格样式，可以使用`knitr::kable(dataset)`。\n\n## 相关资源\n\n- [Quarto文档](https://quarto.org/docs/reference/)\n\n- [Awesome Quarto](https://github.com/mcanouil/awesome-quarto)\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}